package cycle_listed_items

import (
	"fmt"
	"shnyr/internal/database"
	"shnyr/internal/interrupt"
	"shnyr/internal/logger"
)

// checkForStopAction –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –¥–µ–π—Å—Ç–≤–∏—è "stop" –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
func checkForStopAction(dbManager *database.DatabaseManager, loggerManager *logger.LoggerManager) (bool, int, error) {
	action, actionID, err := dbManager.GetLatestUnexecutedAction()
	if err != nil {
		return false, 0, err
	}

	if action == "stop" {
		loggerManager.Info("üõë –û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –¥–µ–π—Å—Ç–≤–∏–µ 'stop' –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö (ID: %d)", actionID)
		return true, actionID, nil
	}

	return false, 0, nil
}

// checkInterruption –ø—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –∫–∞–∫ —á–µ—Ä–µ–∑ –≥–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏, —Ç–∞–∫ –∏ —á–µ—Ä–µ–∑ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
func checkInterruption(interruptManager *interrupt.InterruptManager, dbManager *database.DatabaseManager, loggerManager *logger.LoggerManager) (bool, int, error) {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –≥–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏
	select {
	case <-interruptManager.GetScriptInterruptChan():
		loggerManager.Info("‚èπÔ∏è –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ –≥–æ—Ä—è—á–∏–º –∫–ª–∞–≤–∏—à–∞–º")
		return true, 0, fmt.Errorf("–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ –≥–æ—Ä—è—á–∏–º –∫–ª–∞–≤–∏—à–∞–º")
	default:
	}

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
	hasStopAction, actionID, err := checkForStopAction(dbManager, loggerManager)
	if err != nil {
		loggerManager.LogError(err, "–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
		return false, 0, err
	}

	if hasStopAction {
		// –ü–æ–º–µ—á–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–µ
		err = dbManager.MarkActionAsExecuted(actionID)
		if err != nil {
			loggerManager.LogError(err, "–û—à–∏–±–∫–∞ –ø–æ–º–µ—Ç–∫–∏ –¥–µ–π—Å—Ç–≤–∏—è –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–Ω–æ–≥–æ")
		}

		// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞ stopped
		err = dbManager.UpdateStatus("stopped")
		if err != nil {
			loggerManager.LogError(err, "–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ –Ω–∞ stopped")
		}

		loggerManager.Info("‚èπÔ∏è –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ –¥–µ–π—Å—Ç–≤–∏—é 'stop' –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
		return true, actionID, fmt.Errorf("–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ –¥–µ–π—Å—Ç–≤–∏—é 'stop' –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö")
	}

	return false, 0, nil
}
