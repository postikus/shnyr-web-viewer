package cycle_listed_items

import (
	"fmt"
	"image"
	"shnyr/internal/click_manager"
	"shnyr/internal/config"
	"shnyr/internal/database"
	"shnyr/internal/interrupt"
	"shnyr/internal/logger"
	"shnyr/internal/ocr"
	"shnyr/internal/screenshot"
)

// processItemListPage –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–¥–µ–ª—å–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç —Å–æ –≤—Å–µ–º–∏ –µ–≥–æ –∫–Ω–æ–ø–∫–∞–º–∏
func processItemListPage(c *config.Config, screenshotManager *screenshot.ScreenshotManager, ocrManager *ocr.OCRManager, dbManager *database.DatabaseManager, clickManager *click_manager.ClickManager, loggerManager *logger.LoggerManager, interruptManager *interrupt.InterruptManager, isFirstCycle bool, currentItem string, itemCategory string) error {
	loggerManager.Info("üéØ processItemListPage: –ø—Ä–µ–¥–º–µ—Ç='%s', –∫–∞—Ç–µ–≥–æ—Ä–∏—è='%s', –ø–µ—Ä–≤—ã–π_—Ü–∏–∫–ª=%v", currentItem, itemCategory, isFirstCycle)

	itemCoordinates, err := screenshotManager.GetItemListItemsCoordinates()
	if err != nil {
		loggerManager.LogError(err, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
		return err
	}

	// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –∏–Ω–¥–µ–∫—Å –ø—Ä–µ–¥–º–µ—Ç–∞ —Ç–æ–ª—å–∫–æ –¥–ª—è –ø–µ—Ä–≤–æ–≥–æ —Ü–∏–∫–ª–∞
	var startIndex int
	if isFirstCycle {
		// –î–ª—è –ø–µ—Ä–≤–æ–≥–æ —Ü–∏–∫–ª–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º —É–∫–∞–∑–∞–Ω–Ω—ã–π —Å—Ç–∞—Ä—Ç–æ–≤—ã–π –ø—Ä–µ–¥–º–µ—Ç
		startIndex = c.StartItemIndex - 1 // –ù–æ–º–µ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 1, –∏–Ω–¥–µ–∫—Å —Å 0
		if startIndex < 0 {
			loggerManager.Info("‚ö†Ô∏è –ù–æ–º–µ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞ %d –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω, –Ω–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–≥–æ", c.StartItemIndex)
			startIndex = 0
		}
		if startIndex >= len(itemCoordinates) {
			loggerManager.Info("‚ö†Ô∏è –ù–æ–º–µ—Ä –ø—Ä–µ–¥–º–µ—Ç–∞ %d –ø—Ä–µ–≤—ã—à–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ (%d), –Ω–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–≥–æ", c.StartItemIndex, len(itemCoordinates))
			startIndex = 0
		}
		loggerManager.Info("üìç –ü–µ—Ä–≤—ã–π —Ü–∏–∫–ª: –Ω–∞—á–∏–Ω–∞–µ–º —Å –ø—Ä–µ–¥–º–µ—Ç–∞ %d –∏–∑ %d", startIndex+1, len(itemCoordinates))
	} else {
		// –î–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö —Ü–∏–∫–ª–æ–≤ –Ω–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
		startIndex = 0
		loggerManager.Info("üìç –ü–æ—Å–ª–µ–¥—É—é—â–∏–π —Ü–∏–∫–ª: –Ω–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞ –∏–∑ %d", len(itemCoordinates))
	}

	// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –ø—Ä–µ–¥–º–µ—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
	isConsumable := itemCategory == "buy_consumables" || itemCategory == "sell_consumables"
	isEquipment := itemCategory == "buy_equipment" || itemCategory == "sell_equipment"
	isBuy := itemCategory == "buy_consumables" || itemCategory == "buy_equipment"
	isSell := itemCategory == "sell_consumables" || itemCategory == "sell_equipment"

	if isConsumable {
		loggerManager.Info("üç∂ –ü—Ä–µ–¥–º–µ—Ç '%s' —è–≤–ª—è–µ—Ç—Å—è —Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–æ–º (%s), –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü", currentItem, itemCategory)
	} else if isEquipment {
		loggerManager.Info("‚öîÔ∏è –ü—Ä–µ–¥–º–µ—Ç '%s' —è–≤–ª—è–µ—Ç—Å—è —ç–∫–∏–ø–∏—Ä–æ–≤–∫–æ–π (%s), –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü", currentItem, itemCategory)
	} else {
		loggerManager.Info("‚ùì –ü—Ä–µ–¥–º–µ—Ç '%s' –∏–º–µ–µ—Ç –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é (%s), –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∫ —ç–∫–∏–ø–∏—Ä–æ–≤–∫—É", currentItem, itemCategory)
		isEquipment = true
	}

	if isBuy {
		loggerManager.Info("üí∞ –ü—Ä–µ–¥–º–µ—Ç '%s' –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è —Å–∫—É–ø–∫–∏", currentItem)
	} else if isSell {
		loggerManager.Info("üí∏ –ü—Ä–µ–¥–º–µ—Ç '%s' –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏", currentItem)
	}

	// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–∞–∂–¥—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π –ø—Ä–µ–¥–º–µ—Ç –Ω–∞—á–∏–Ω–∞—è —Å —É–∫–∞–∑–∞–Ω–Ω–æ–≥–æ
	for i := startIndex; i < len(itemCoordinates); i++ {
		coordinate := itemCoordinates[i]

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏–≥–Ω–∞–ª –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è –≤ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–∞–∂–¥–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
		interrupted, _, checkErr := checkInterruption(interruptManager, dbManager, loggerManager)
		if checkErr != nil {
			loggerManager.Info("‚èπÔ∏è –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
			return fmt.Errorf("–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
		}
		if interrupted {
			loggerManager.Info("‚èπÔ∏è –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
			return fmt.Errorf("–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
		}

		loggerManager.Info("üìç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç %d/%d –≤ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞—Ö: %v", i+1, len(itemCoordinates), coordinate)

		// –∫–ª–∏–∫–∞–µ–º –ø–æ –ø—Ä–µ–¥–º–µ—Ç—É
		clickManager.ClickCoordinates(coordinate)

		// –ø–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã
		pageStatus := screenshotManager.GetPageStatus(c)

		// –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É –ø—Ä–µ–¥–º–µ—Ç–∞
		err := processItemPageWithButtonLogic(c, screenshotManager, ocrManager, dbManager, loggerManager, currentItem, itemCategory)
		if err != nil {
			loggerManager.LogError(err, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
			return err
		}

		// –î–ª—è consumables –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–Ω–æ–ø–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü
		if !isConsumable {
			if pageStatus.Buttons.Button2Active {
				// –∫–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ 2
				clickManager.ClickCoordinates(image.Point{X: c.Click.Button2.X, Y: c.Click.Button2.Y})

				// –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–Ω–æ–ø–∫–∏ 2
				err = processItemPageWithButtonLogic(c, screenshotManager, ocrManager, dbManager, loggerManager, currentItem, itemCategory)
				if err != nil {
					loggerManager.LogError(err, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–Ω–æ–ø–∫–∏ 2")
					return err
				}
			}

			// –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–∫ –æ–Ω –º–æ–≥ —É—Å—Ç–∞—Ä–µ—Ç—å
			pageStatus = screenshotManager.GetPageStatus(c)
			if pageStatus.Buttons.Button3Active {
				// –∫–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ 3
				clickManager.ClickCoordinates(image.Point{X: c.Click.Button3.X, Y: c.Click.Button3.Y})

				// –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–Ω–æ–ø–∫–∏ 3
				err = processItemPageWithButtonLogic(c, screenshotManager, ocrManager, dbManager, loggerManager, currentItem, itemCategory)
				if err != nil {
					loggerManager.LogError(err, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–Ω–æ–ø–∫–∏ 3")
					return err
				}
			}

			// –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–∫ –æ–Ω –º–æ–≥ —É—Å—Ç–∞—Ä–µ—Ç—å
			pageStatus = screenshotManager.GetPageStatus(c)
			if pageStatus.Buttons.Button4Active {
				// –∫–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ 4
				clickManager.ClickCoordinates(image.Point{X: c.Click.Button4.X, Y: c.Click.Button4.Y})

				// –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–Ω–æ–ø–∫–∏ 4
				err = processItemPageWithButtonLogic(c, screenshotManager, ocrManager, dbManager, loggerManager, currentItem, itemCategory)
				if err != nil {
					loggerManager.LogError(err, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–Ω–æ–ø–∫–∏ 4")
					return err
				}
			}

			// –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–∫ –æ–Ω –º–æ–≥ —É—Å—Ç–∞—Ä–µ—Ç—å
			pageStatus = screenshotManager.GetPageStatus(c)
			if pageStatus.Buttons.Button5Active {
				// –∫–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ 5
				clickManager.ClickCoordinates(image.Point{X: c.Click.Button5.X, Y: c.Click.Button5.Y})

				// –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–Ω–æ–ø–∫–∏ 5
				err = processItemPageWithButtonLogic(c, screenshotManager, ocrManager, dbManager, loggerManager, currentItem, itemCategory)
				if err != nil {
					loggerManager.LogError(err, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–Ω–æ–ø–∫–∏ 5")
					return err
				}
			}

			// –æ–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Ç–∫ –æ–Ω –º–æ–≥ —É—Å—Ç–∞—Ä–µ—Ç—å
			pageStatus = screenshotManager.GetPageStatus(c)
			if pageStatus.Buttons.Button6Active {
				// –∫–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ 6
				clickManager.ClickCoordinates(image.Point{X: c.Click.Button6.X, Y: c.Click.Button6.Y})

				// –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–Ω–æ–ø–∫–∏ 6
				err = processItemPageWithButtonLogic(c, screenshotManager, ocrManager, dbManager, loggerManager, currentItem, itemCategory)
				if err != nil {
					loggerManager.LogError(err, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∫–Ω–æ–ø–∫–∏ 6")
					return err
				}
			}
		} else {
			loggerManager.Info("üç∂ –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∫–Ω–æ–ø–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è —Ä–∞—Å—Ö–æ–¥–Ω–∏–∫–∞")
		}

		// –∫–ª–∏–∫–∞–µ–º –ø–æ back
		clickManager.ClickCoordinates(image.Point{X: c.Click.Back.X, Y: c.Click.Back.Y})
	}
	return nil
}

// processItemsByCategory –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—Ä–µ–¥–º–µ—Ç—ã –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (buy –∏–ª–∏ sell)
func processItemsByCategory(c *config.Config, screenshotManager *screenshot.ScreenshotManager, ocrManager *ocr.OCRManager, dbManager *database.DatabaseManager, clickManager *click_manager.ClickManager, loggerManager *logger.LoggerManager, interruptManager *interrupt.InterruptManager, category string, cycles int, startButtonIndex int) error {
	// –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
	itemList, err := dbManager.GetItemsByCategory(category)
	if err != nil {
		loggerManager.LogError(err, fmt.Sprintf("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ %s", category))
		return err
	}

	loggerManager.Info("üîç DEBUG: GetItemsByCategory('%s') –≤–µ—Ä–Ω—É–ª %d –ø—Ä–µ–¥–º–µ—Ç–æ–≤: %v", category, len(itemList), itemList)

	if len(itemList) == 0 {
		loggerManager.Info("üìã –ù–µ—Ç –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ %s", category)
		return nil
	}

	loggerManager.Info("üìã –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º %d –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ %s", len(itemList), category)

	for i, item := range itemList {
		interrupted, _, checkErr := checkInterruption(interruptManager, dbManager, loggerManager)
		if checkErr != nil {
			loggerManager.Info("‚èπÔ∏è –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
			return fmt.Errorf("–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
		}
		if interrupted {
			loggerManager.Info("‚èπÔ∏è –ü—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
			return fmt.Errorf("–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
		}

		loggerManager.Info("üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø—Ä–µ–¥–º–µ—Ç %d/%d: %s (–∫–∞—Ç–µ–≥–æ—Ä–∏—è: %s)", i+1, len(itemList), item, category)

		// –ö–æ–ø–∏—Ä—É–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞ –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
		clickManager.CopyToClipboard(item)

		// –í—Å—Ç–∞–≤–ª—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–¥–º–µ—Ç–∞
		clickManager.Paste()

		// –∫–ª–∏–∫–∞–µ–º –Ω–∞ –ø–æ–∏—Å–∫
		clickManager.ClickCoordinates(image.Point{X: 120, Y: 240})

		// –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ –≤ —Ü–∏–∫–ª–µ
		var buttonIndex int
		if cycles == 0 {
			// –í –ø–µ—Ä–≤–æ–º —Ü–∏–∫–ª–µ –Ω–∞—á–∏–Ω–∞–µ–º —Å —É–∫–∞–∑–∞–Ω–Ω–æ–π –Ω–∞—á–∞–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–∏
			buttonIndex = startButtonIndex
		} else {
			// –í –ø–æ—Å–ª–µ–¥—É—é—â–∏—Ö —Ü–∏–∫–ª–∞—Ö –Ω–∞—á–∏–Ω–∞–µ–º —Å –ø–µ—Ä–≤–æ–π –∫–Ω–æ–ø–∫–∏
			buttonIndex = 1
		}

		// –ü—Ä–æ–≤–µ—Ä—è–µ–º –µ—Å—Ç—å –ª–∏ –≤–æ–æ–±—â–µ –∞–∫—Ç–∏–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏
		hasActiveButtons := false
		for checkButton := 1; checkButton <= 6; checkButton++ {
			var checkButtonX int
			switch checkButton {
			case 1:
				checkButtonX = c.Click.Button1.X
			case 2:
				checkButtonX = c.Click.Button2.X
			case 3:
				checkButtonX = c.Click.Button3.X
			case 4:
				checkButtonX = c.Click.Button4.X
			case 5:
				checkButtonX = c.Click.Button5.X
			case 6:
				checkButtonX = c.Click.Button6.X
			}

			if screenshotManager.CheckButtonActiveByPixel(checkButtonX, 35) {
				hasActiveButtons = true
				break
			}
		}

		if !hasActiveButtons {
			loggerManager.Info("üîç –ê–∫—Ç–∏–≤–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –±–µ–∑ –∫–Ω–æ–ø–æ–∫")
			err := processItemListPage(c, screenshotManager, ocrManager, dbManager, clickManager, loggerManager, interruptManager, cycles == 0 && buttonIndex == startButtonIndex, item, category)
			if err != nil {
				if err.Error() == "–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" {
					loggerManager.Info("‚èπÔ∏è –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø–æ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—é")
					return err
				}
				loggerManager.LogError(err, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏")
			}
		} else {
			// –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫–∏ –∫–∞–∫ –æ–±—ã—á–Ω–æ
			for buttonIndex <= 6 {
				var buttonX, buttonY int
				switch buttonIndex {
				case 1:
					buttonX, buttonY = c.Click.Button1.X, c.Click.Button1.Y
				case 2:
					buttonX, buttonY = c.Click.Button2.X, c.Click.Button2.Y
				case 3:
					buttonX, buttonY = c.Click.Button3.X, c.Click.Button3.Y
				case 4:
					buttonX, buttonY = c.Click.Button4.X, c.Click.Button4.Y
				case 5:
					buttonX, buttonY = c.Click.Button5.X, c.Click.Button5.Y
				case 6:
					buttonX, buttonY = c.Click.Button6.X, c.Click.Button6.Y
				}

				// –î–ª—è –Ω–∞—á–∞–ª—å–Ω–æ–π –∫–Ω–æ–ø–∫–∏ –≤ –ø–µ—Ä–≤–æ–º —Ü–∏–∫–ª–µ –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å - —Å—Ä–∞–∑—É –∫–ª–∏–∫–∞–µ–º
				if buttonIndex == startButtonIndex && cycles == 0 {
					loggerManager.Info("üîò –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –∫–Ω–æ–ø–∫—É %d (–ø–µ—Ä–≤—ã–π —Ü–∏–∫–ª)", buttonIndex)
					clickManager.ClickCoordinates(image.Point{X: buttonX, Y: buttonY})
					err := processItemListPage(c, screenshotManager, ocrManager, dbManager, clickManager, loggerManager, interruptManager, true, item, category)
					if err != nil {
						if err.Error() == "–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" {
							loggerManager.Info("‚èπÔ∏è –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø–æ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—é")
							return err
						}
						loggerManager.LogError(err, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏")
					}

					// –î–ª—è –∫–Ω–æ–ø–∫–∏ 6 –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –Ω–∞–∂–∏–º–∞—Ç—å –ø–æ–∫–∞ –æ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞
					if buttonIndex == 6 {
						for screenshotManager.CheckButtonActiveByPixel(buttonX, 35) {
							loggerManager.Info("üîò –ü–æ–≤—Ç–æ—Ä–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É 6")
							clickManager.ClickCoordinates(image.Point{X: buttonX, Y: buttonY})
							err = processItemListPage(c, screenshotManager, ocrManager, dbManager, clickManager, loggerManager, interruptManager, false, item, category)
							if err != nil {
								if err.Error() == "–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" {
									loggerManager.Info("‚èπÔ∏è –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø–æ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—é")
									return err
								}
								loggerManager.LogError(err, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏")
							}
						}
						loggerManager.Info("üîç –ö–Ω–æ–ø–∫–∞ 6 –±–æ–ª—å—à–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞, –∑–∞–≤–µ—Ä—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É")
						break
					}
				} else if buttonIndex == 1 {
					// –ö–Ω–æ–ø–∫–∞ 1 –≤—Å–µ–≥–¥–∞ –∫–ª–∏–∫–∞–µ—Ç—Å—è –±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
					loggerManager.Info("üîò –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É 1 (–≤—Å–µ–≥–¥–∞ –∞–∫—Ç–∏–≤–Ω–∞)")
					clickManager.ClickCoordinates(image.Point{X: buttonX, Y: buttonY})
					err := processItemListPage(c, screenshotManager, ocrManager, dbManager, clickManager, loggerManager, interruptManager, false, item, category)
					if err != nil {
						if err.Error() == "–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" {
							loggerManager.Info("‚èπÔ∏è –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø–æ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—é")
							return err
						}
						loggerManager.LogError(err, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏")
					}

					// –î–ª—è –∫–Ω–æ–ø–∫–∏ 6 –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –Ω–∞–∂–∏–º–∞—Ç—å –ø–æ–∫–∞ –æ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞
					if buttonIndex == 6 {
						for screenshotManager.CheckButtonActiveByPixel(buttonX, 35) {
							loggerManager.Info("üîò –ü–æ–≤—Ç–æ—Ä–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É 6")
							clickManager.ClickCoordinates(image.Point{X: buttonX, Y: buttonY})
							err = processItemListPage(c, screenshotManager, ocrManager, dbManager, clickManager, loggerManager, interruptManager, false, item, category)
							if err != nil {
								if err.Error() == "–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" {
									loggerManager.Info("‚èπÔ∏è –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø–æ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—é")
									return err
								}
								loggerManager.LogError(err, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏")
							}
						}
						loggerManager.Info("üîç –ö–Ω–æ–ø–∫–∞ 6 –±–æ–ª—å—à–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞, –∑–∞–≤–µ—Ä—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É")
						break
					}
				} else {
					// –î–ª—è –≤—Å–µ—Ö –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–Ω–æ–ø–æ–∫ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å
					loggerManager.Info("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–Ω–æ–ø–∫—É %d (–Ω–∞—á–∞–ª—å–Ω–∞—è –∫–Ω–æ–ø–∫–∞: %d, —Ü–∏–∫–ª: %d)", buttonIndex, startButtonIndex, cycles+1)

					if screenshotManager.CheckButtonActiveByPixel(buttonX, 35) {
						loggerManager.Info("üîò –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É %d", buttonIndex)
						clickManager.ClickCoordinates(image.Point{X: buttonX, Y: buttonY})
						err := processItemListPage(c, screenshotManager, ocrManager, dbManager, clickManager, loggerManager, interruptManager, false, item, category)
						if err != nil {
							if err.Error() == "–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" {
								loggerManager.Info("‚èπÔ∏è –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø–æ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—é")
								return err
							}
							loggerManager.LogError(err, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏")
						}

						// –î–ª—è –∫–Ω–æ–ø–∫–∏ 6 –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –Ω–∞–∂–∏–º–∞—Ç—å –ø–æ–∫–∞ –æ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞
						if buttonIndex == 6 {
							for screenshotManager.CheckButtonActiveByPixel(buttonX, 35) {
								loggerManager.Info("üîò –ü–æ–≤—Ç–æ—Ä–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É 6")
								clickManager.ClickCoordinates(image.Point{X: buttonX, Y: buttonY})
								err = processItemListPage(c, screenshotManager, ocrManager, dbManager, clickManager, loggerManager, interruptManager, false, item, category)
								if err != nil {
									if err.Error() == "–ø—Ä–µ—Ä—ã–≤–∞–Ω–∏–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è" {
										loggerManager.Info("‚èπÔ∏è –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã –ø–æ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—é")
										return err
									}
									loggerManager.LogError(err, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –ø—Ä–µ–¥–º–µ—Ç–∞–º–∏")
								}
							}
							loggerManager.Info("üîç –ö–Ω–æ–ø–∫–∞ 6 –±–æ–ª—å—à–µ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞, –∑–∞–≤–µ—Ä—à–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É")
							break
						}
					} else {
						loggerManager.Info("üîç –ö–Ω–æ–ø–∫–∞ %d –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º", buttonIndex)
					}
				}
				buttonIndex++
			}
		}

		clickManager.ClickCoordinates(image.Point{X: c.Click.Back.X, Y: c.Click.Back.Y})
	}

	return nil
}
