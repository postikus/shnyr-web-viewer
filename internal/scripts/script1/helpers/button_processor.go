package helpers

import (
	"fmt"
	"image"
	"octopus/internal/config"
	imageInternal "octopus/internal/image"
	"octopus/internal/scripts"

	"github.com/tarm/serial"
)

// ButtonProcessor —Å–æ–¥–µ—Ä–∂–∏—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–æ–∫
type ButtonProcessor struct {
	port             *serial.Port
	config           *config.Config
	marginX          int
	marginY          int
	screenshotHelper *ScreenshotHelper
	imageHelper      *ImageHelper
	ocrProcessor     *OCRProcessor
}

// NewButtonProcessor —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä ButtonProcessor
func NewButtonProcessor(port *serial.Port, config *config.Config, marginX, marginY int, ocrProcessor *OCRProcessor) *ButtonProcessor {
	screenshotHelper := NewScreenshotHelper(marginX, marginY)
	imageHelper := NewImageHelper(port, config, marginX, marginY)

	return &ButtonProcessor{
		port:             port,
		config:           config,
		marginX:          marginX,
		marginY:          marginY,
		screenshotHelper: screenshotHelper,
		imageHelper:      imageHelper,
		ocrProcessor:     ocrProcessor,
	}
}

// CaptureScreenShotsWithScroll –≤—ã–ø–æ–ª–Ω—è–µ—Ç –∑–∞—Ö–≤–∞—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ —Å–æ —Å–∫—Ä–æ–ª–ª–æ–º
func (p *ButtonProcessor) CaptureScreenShotsWithScroll() bool {
	fmt.Println("=== –ù–∞—á–∞–ª–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è captureScreenShotsWithScroll ===")

	// –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —Å–∫—Ä–æ–ª–ª –≤–æ–æ–±—â–µ
	img := p.screenshotHelper.CaptureScreenShot()
	scrollRPx, scrollGPx, scrollBPx, _ := imageInternal.GetPixelColor(img, 290, 15)
	fmt.Printf("scrollRPx: %v %v %v\n", scrollRPx, scrollGPx, scrollBPx)

	// –ï—Å–ª–∏ –Ω–µ—Ç —Å–∫—Ä–æ–ª–ª–∞, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º false
	if scrollRPx <= 26 {
		fmt.Println("‚ùå –°–∫—Ä–æ–ª–ª –Ω–µ –Ω–∞–π–¥–µ–Ω (scrollRPx <= 26), –≤—ã—Ö–æ–¥–∏–º –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏")
		return false
	}
	fmt.Println("‚úÖ –°–∫—Ä–æ–ª–ª –Ω–∞–π–¥–µ–Ω, –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ")

	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤—Å–µ—Ö –∫–Ω–æ–ø–æ–∫
	fmt.Println("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –∫–Ω–æ–ø–æ–∫...")
	button2Active := p.imageHelper.CheckButtonActive(p.config.Click.Button2.X, p.config.Click.Button2.Y, "listButton2", img)
	button3Active := p.imageHelper.CheckButtonActive(p.config.Click.Button3.X, p.config.Click.Button3.Y, "listButton3", img)
	button4Active := p.imageHelper.CheckButtonActive(p.config.Click.Button4.X, p.config.Click.Button4.Y, "listButton4", img)
	button5Active := p.imageHelper.CheckButtonActive(p.config.Click.Button5.X, p.config.Click.Button5.Y, "listButton5", img)
	button6Active := p.imageHelper.CheckButtonActive(p.config.Click.Button6.X, p.config.Click.Button6.Y, "listButton6", img)

	fmt.Printf("üìã –°—Ç–∞—Ç—É—Å –∫–Ω–æ–ø–æ–∫: Button2=%v, Button3=%v, Button4=%v, Button5=%v, Button6=%v\n",
		button2Active, button3Active, button4Active, button5Active, button6Active)

	// –í—ã–ø–æ–ª–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –∏ OCR (–±–µ–∑ –Ω–∞–∂–∞—Ç–∏—è –∫–Ω–æ–ø–æ–∫)
	fmt.Println("üîÑ –í—ã–ø–æ–ª–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –∏ OCR...")
	if button2Active {
		err := p.ocrProcessor.PerformScreenshotAndOCR(true)
		if err != nil {
			fmt.Printf("‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ: %v\n", err)
			return false
		}
	} else {
		err := p.ocrProcessor.PerformScreenshotAndOCR(false)
		if err != nil {
			fmt.Printf("‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ: %v\n", err)
			return false
		}
	}

	fmt.Println("‚úÖ –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ")

	// –ò–¥–µ–º –ø–æ –∫–Ω–æ–ø–∫–∞–º –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ
	if button2Active {
		fmt.Println("üîò –ö–ª–∏–∫–∞–µ–º –ø–æ Button2...")
		scripts.ClickCoordinates(p.port, p.config, config.Coordinates{X: p.marginX + p.config.Click.Button2.X, Y: p.marginY + p.config.Click.Button2.Y})
		err := p.ocrProcessor.PerformScreenshotAndOCR(true)
		if err != nil {
			fmt.Printf("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ Button2: %v\n", err)
			return false
		}
		fmt.Println("‚úÖ Button2 –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ")
	} else {
		fmt.Println("‚è≠Ô∏è Button2 –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
	}

	if button3Active {
		fmt.Println("üîò –ö–ª–∏–∫–∞–µ–º –ø–æ Button3...")
		scripts.ClickCoordinates(p.port, p.config, config.Coordinates{X: p.marginX + p.config.Click.Button3.X, Y: p.marginY + p.config.Click.Button3.Y})
		err := p.ocrProcessor.PerformScreenshotAndOCR(true)
		if err != nil {
			fmt.Printf("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ Button3: %v\n", err)
			return false
		}
		fmt.Println("‚úÖ Button3 –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ")
	} else {
		fmt.Println("‚è≠Ô∏è Button3 –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
	}

	if button4Active {
		fmt.Println("üîò –ö–ª–∏–∫–∞–µ–º –ø–æ Button4...")
		scripts.ClickCoordinates(p.port, p.config, config.Coordinates{X: p.marginX + p.config.Click.Button4.X, Y: p.marginY + p.config.Click.Button4.Y})
		err := p.ocrProcessor.PerformScreenshotAndOCR(true)
		if err != nil {
			fmt.Printf("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ Button4: %v\n", err)
			return false
		}
		fmt.Println("‚úÖ Button4 –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ")
	} else {
		fmt.Println("‚è≠Ô∏è Button4 –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
	}

	if button5Active {
		fmt.Println("üîò –ö–ª–∏–∫–∞–µ–º –ø–æ Button5...")
		scripts.ClickCoordinates(p.port, p.config, config.Coordinates{X: p.marginX + p.config.Click.Button5.X, Y: p.marginY + p.config.Click.Button5.Y})
		err := p.ocrProcessor.PerformScreenshotAndOCR(true)
		if err != nil {
			fmt.Printf("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ Button5: %v\n", err)
			return false
		}
		fmt.Println("‚úÖ Button5 –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ")
	} else {
		fmt.Println("‚è≠Ô∏è Button5 –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
	}

	if button6Active {
		fmt.Println("üîò –ö–ª–∏–∫–∞–µ–º –ø–æ Button6...")
		scripts.ClickCoordinates(p.port, p.config, config.Coordinates{X: p.marginX + p.config.Click.Button6.X, Y: p.marginY + p.config.Click.Button6.Y})
		err := p.ocrProcessor.PerformScreenshotAndOCR(true)
		if err != nil {
			fmt.Printf("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ Button6: %v\n", err)
			return false
		}
		fmt.Println("‚úÖ Button6 –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ")
	} else {
		fmt.Println("‚è≠Ô∏è Button6 –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")
	}

	// –ö–ª–∏–∫–∞–µ–º Back —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∫–Ω–æ–ø–∫–∏
	fmt.Println("üîô –ö–ª–∏–∫–∞–µ–º –ø–æ –∫–Ω–æ–ø–∫–µ Back...")
	scripts.ClickCoordinates(p.port, p.config, config.Coordinates{X: p.marginX + p.config.Click.Back.X, Y: p.marginY + p.config.Click.Back.Y})
	fmt.Println("‚úÖ Back –∫–ª–∏–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω")

	fmt.Println("=== –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ captureScreenShotsWithScroll ===")
	return true
}

// ClickItem –∫–ª–∏–∫–∞–µ—Ç –ø–æ —ç–ª–µ–º–µ–Ω—Ç—É –∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç
func (p *ButtonProcessor) ClickItem(item config.Coordinates) {
	scripts.ClickCoordinates(p.port, p.config, item)
	combinedSaved := p.CaptureScreenShotsWithScroll()
	if !combinedSaved {
		p.screenshotHelper.SaveScreenShot(p.config)
		scripts.ClickCoordinates(p.port, p.config, config.Coordinates{X: p.marginX + p.config.Click.Back.X, Y: p.marginY + p.config.Click.Back.Y})
	}
}

// ClickEveryItemAndScreenShot –∫–ª–∏–∫–∞–µ—Ç –ø–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏
func (p *ButtonProcessor) ClickEveryItemAndScreenShot(img image.Image) {
	// –ø—Ä–æ–∫–ª–∏–∫–∏–≤–∞–µ–º –ø–µ—Ä–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
	points := imageInternal.FindItemPositionsByTextColor(img, 80)
	fmt.Printf("üîç –ù–∞–π–¥–µ–Ω–æ —Ç–æ—á–µ–∫ –¥–ª—è –∫–ª–∏–∫–∞: %d\n", len(points))
	if len(points) > 0 {
		fmt.Printf("‚úÖ –ù–∞–π–¥–µ–Ω–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ—á–µ–∫, –Ω–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É...\n")
		for i, point := range points {
			fmt.Printf("üñ±Ô∏è –ö–ª–∏–∫–∞–µ–º –ø–æ —Ç–æ—á–∫–µ %d: (%d, %d)\n", i+1, point.X, point.Y)
			p.ClickItem(config.Coordinates{Y: point.Y + p.marginY, X: p.marginX + point.X})
		}
	} else {
		fmt.Printf("‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Ç–æ—á–µ–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ (–Ω—É–∂–Ω–æ > 0, –Ω–∞–π–¥–µ–Ω–æ: %d)\n", len(points))
	}
}
